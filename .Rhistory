to = max(pod.new$priroda, na.rm = TRUE) + 0.5, length = 11))
hist(pod.new$zabava, freq=FALSE,
breaks = seq(from = min(pod.new$zabava, na.rm = TRUE) - 0.5,
to = max(pod.new$zabava, na.rm = TRUE) + 0.5, length = 11))
hist(pod.new$ugostiteljski, freq=FALSE,
breaks = seq(from = min(pod.new$ugostiteljski, na.rm = TRUE) - 0.5,
to = max(pod.new$ugostiteljski, na.rm = TRUE) + 0.5, length = 11))
hist(pod.new$sport, freq=FALSE,
breaks = seq(from = min(pod.new$sport, na.rm = TRUE) - 0.5,
to = max(pod.new$sport, na.rm = TRUE) + 0.5, length = 11))
hist(pod.new$religiozni, freq=FALSE,
breaks = seq(from = min(pod.new$religiozni, na.rm = TRUE) - 0.5,
to = max(pod.new$religiozni, na.rm = TRUE) + 0.5, length = 11))
hist(pod.new$ostalo, freq=FALSE,
breaks = seq(from = min(pod.new$ostalo, na.rm = TRUE) - 0.5,
to = max(pod.new$ostalo, na.rm = TRUE) + 0.5, length = 11))
#Grupiranje podataka --kraj
#T-testovi --početak
#Kako bi se dobio bolji uvid u podatke pri odabiru kategorija
# koje će ući u T-testove.
#Prema grupama, istim kao u dijelu gdje su podaci grupirani,
# stvorene su tablice srednjih vrijednosti kategorija unutar grupe.
#Iz takvihh tablica će se lakše odlučiti o kategorijama koje
# će ući u T-testove.
par(mfrow=c(2,2),mar = c(2, 2, 2, 2))
qqnorm(pod.new$kultura, main="Normal Q-Q Plot za kulturu")
qqline(pod.new$kultura, col='red')
qqnorm(pod.new$hrana, main="Normal Q-Q Plot za hranu")
qqline(pod.new$hrana, col='red')
qqnorm(pod.new$zabava, main="Normal Q-Q Plot za zabavu")
qqline(pod.new$zabava, col='red')
qqnorm(pod.new$pice, main="Normal Q-Q Plot za pice")
qqline(pod.new$pice, col='red')
#qqnorm(pod.new$zabava)
#qqline(pod.new$zabava, col='red')
kategorija = grupa.kultura
srednja.ocjena = c(mean(pod$art.galleries, na.rm = TRUE),
mean(pod$monuments, na.rm = TRUE),
mean(pod$museums, na.rm = TRUE),
mean(pod$theatres, na.rm = TRUE))
kultura = data.frame(kategorija, srednja.ocjena)
kategorija = grupa.hrana
srednja.ocjena = c(mean(pod$bakeries, na.rm = TRUE),
mean(pod$burger.pizza.shops, na.rm = TRUE),
mean(pod$restaurants, na.rm = TRUE))
hrana = data.frame(kategorija, srednja.ocjena)
kategorija = grupa.pice
srednja.ocjena = c(mean(pod$cafes, na.rm = TRUE),
mean(pod$juice.bars, na.rm = TRUE),
mean(pod$pubs.bars, na.rm = TRUE))
pice = data.frame(kategorija, srednja.ocjena)
kategorija = grupa.priroda
srednja.ocjena = c(mean(pod$beaches, na.rm = TRUE),
mean(pod$gardens, na.rm = TRUE),
mean(pod$parks, na.rm = TRUE),
mean(pod$view.points, na.rm = TRUE))
priroda = data.frame(kategorija, srednja.ocjena)
kategorija = grupa.ugostiteljski
srednja.ocjena = c(mean(pod$hotels.other.lodgings, na.rm = TRUE),
mean(pod$resorts, na.rm = TRUE))
ugostiteljski = data.frame(kategorija, srednja.ocjena)
kategorija = grupa.religiozni
srednja.ocjena = c(mean(pod$churches, na.rm = TRUE))
religiozni = data.frame(kategorija, srednja.ocjena)
kategorija = grupa.sport
srednja.ocjena = c(mean(pod$gyms, na.rm = TRUE),
mean(pod$swimming.pools, na.rm = TRUE))
sport = data.frame(kategorija, srednja.ocjena)
kategorija = grupa.zabava
srednja.ocjena = c(mean(pod$beauty...spas, na.rm = TRUE),
mean(pod$dance.clubs, na.rm = TRUE),
mean(pod$malls, na.rm = TRUE),
mean(pod$zoo, na.rm = TRUE))
zabava = data.frame(kategorija, srednja.ocjena)
kategorija = grupa.ostalo
srednja.ocjena = c(mean(pod$local.services, na.rm = TRUE))
ostalo = data.frame(kategorija, srednja.ocjena)
#Tablice grupiranih objekata
#KULTURA
#kultura
#-maksimalna srednja ocjena
#kultura[which(kultura$srednja.ocjena == max(kultura$srednja.ocjena)),]
#-minimalna srednja ocjena
#kultura[which(kultura$srednja.ocjena == min(kultura$srednja.ocjena)),]
#HRANA
#hrana
#-maksimalna srednja ocjena
#hrana[which(hrana$srednja.ocjena == max(hrana$srednja.ocjena)),]
#-minimalna srednja ocjena
#hrana[which(hrana$srednja.ocjena == min(hrana$srednja.ocjena)),]
#PICE
#pice
#-maksimalna srednja ocjena
#pice[which(pice$srednja.ocjena == max(pice$srednja.ocjena)),]
#-minimalna srednja ocjena
#pice[which(pice$srednja.ocjena == min(pice$srednja.ocjena)),]
#ZABAVA
#zabava
#-maksimalna srednja ocjena
#zabava[which(zabava$srednja.ocjena == max(zabava$srednja.ocjena)),]
#-minimalna srednja ocjena
#zabava[which(zabava$srednja.ocjena == min(zabava$srednja.ocjena)),]
#SPORT
#sport
#-maksimalna srednja ocjena
#sport[which(sport$srednja.ocjena == max(sport$srednja.ocjena)),]
#-minimalna srednja ocjena
#sport[which(sport$srednja.ocjena == min(sport$srednja.ocjena)),]
#UGOSTITELJSTVO
#ugostiteljski
#-maksimalna srednja ocjena
#ugostiteljski[which(ugostiteljski$srednja.ocjena ==
#max(ugostiteljski$srednja.ocjena)),]
#-minimalna srednja ocjena
#ugostiteljski[which(ugostiteljski$srednja.ocjena ==
#min(ugostiteljski$srednja.ocjena)),]
#PRIRODA
#priroda
#-maksimalna srednja ocjena
#priroda[which(priroda$srednja.ocjena == max(priroda$srednja.ocjena)),]
#-minimalna srednja ocjena
#priroda[which(priroda$srednja.ocjena == min(priroda$srednja.ocjena)),]
#RELIGIOZNI
#religiozni
#-maksimalna srednja ocjena
#religiozni[which(religiozni$srednja.ocjena ==
#max(religiozni$srednja.ocjena)),]
#-minimalna srednja ocjena
#religiozni[which(religiozni$srednja.ocjena ==
#min(religiozni$srednja.ocjena)),]
#OSTALO
#ostalo
#-maksimalna srednja ocjena
#ostalo[which(ostalo$srednja.ocjena == max(ostalo$srednja.ocjena)),]
#-minimalna srednja ocjena
#ostalo[which(ostalo$srednja.ocjena == min(ostalo$srednja.ocjena)),]
#T-testovi u koje ulaze kategorije maksimalne i minimalne
# srednje ocjene za svaku grupu.
t.test(pod$theatres,pod$monuments, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
t.test(pod$restaurants,pod$bakeries, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
t.test(pod$pubs.bars,pod$cafes, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
t.test(pod$malls,pod$beauty...spas, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
t.test(pod$swimming.pools,pod$gyms, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
t.test(pod$resorts,pod$hotels.other.lodgings, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
t.test(pod$parks,pod$gardens, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
#Kako su grupe religiozni i ostalo jednočlane obje će ući u jedan T-test.
t.test(pod$churches,pod$local.services, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
#Još neki testovi
#t.test(pod$art.galleries,pod$malls, alternative = "two.sided",
#paired = TRUE, na.rm = TRUE)
#t.test(pod$museums,pod$theatres, alternative = "two.sided",
#paired = TRUE, na.rm = TRUE)
#t.test(pod$gyms,pod$beauty...spas, alternative = "two.sided",
#paired = TRUE, na.rm = TRUE)
#t.test(pod$dance.clubs,pod$parks, alternative = "two.sided",
#paired = TRUE, na.rm = TRUE)
#t.test(pod$churches,pod$gyms, alternative = "two.sided",
#paired = TRUE, na.rm = TRUE)
#t.test(pod$view.points,pod$museums, alternative = "two.sided",
#paired = TRUE, na.rm = TRUE)
#T-testovi --kraj
#meanKult = mean(pod.new$kultura, na.rm = TRUE)
#meanHrana = mean(pod.new$hrana, na.rm = TRUE)
#meanPice = mean(pod.new$pice, na.rm = TRUE)
#meanZabava = mean(pod.new$zabava, na.rm = TRUE)
#meanSport = mean(pod.new$sport, na.rm = TRUE)
#meanPriroda = mean(pod.new$priroda, na.rm = TRUE)
#meanUgost = mean(pod.new$ugostiteljski, na.rm = TRUE)
#meanRelig = mean(pod.new$religiozni, na.rm = TRUE)
#cat("Srednja vrijednost grupe kultura: " , meanKult, "\n")
#cat("Srednja vrijednost grupe hrana: " , meanHrana, "\n")
#cat("Srednja vrijednost grupe pice: " , meanPice, "\n")
#cat("Srednja vrijednost grupe zabava: " , meanZabava, "\n")
#cat("Srednja vrijednost grupe sport: " , meanSport, "\n")
#cat("Srednja vrijednost grupe priroda: " , meanPriroda, "\n")
#cat("Srednja vrijednost grupe ugostiteljski: " , meanUgost, "\n")
#cat("Srednja vrijednost grupe religiozni: " , meanRelig, "\n")
# Provjera ima li značajne razlike kod najvećih srednjih
#vrijednosti i najmanjih među grupama
t.test(pod.new$sport,pod.new$religiozni, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
t.test(pod.new$kultura,pod.new$ugostiteljski, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
#   Zaključujemo da je grupa s najmanjom srednjom vrijednošću
#sport a grupa s najvećom je kultura
# T testovi za neke grupe slicnih srednjih vrijednosti
t.test(pod.new$hrana,pod.new$ugostiteljski, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
t.test(pod.new$pice,pod.new$zabava, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
t.test(pod.new$priroda,pod.new$hrana, alternative = "two.sided",
paired = TRUE, na.rm = TRUE)
# Od ovih testova samo za priroda i hrana nemaju znacajne razlike
#u srednjim vrijednostima
sd_data = sort(sd_data)
par(mar = c(9, 5, 0, 0))
barplot(sd_data, ylab="Standardna devijacija", col="lightcoral",
ylim=c(0,0.5 + max(sd_data)), las=2)
sd_data = sapply(pod,sd,na.rm=TRUE)
sd_mean = mean(sd_data)
cat("Srednja vrijednost standardnih devijacija svih kategorija: ",
sd_mean, "\n")
print("Polarizirajuce kategorije: ", quote=F)
sd_art_galleries = sd(pod$art.galleries, na.rm=TRUE)
cat("  Standardna devijacija kategorije \"art.galleries\"",
sd_art_galleries, "\n")
sd_view_points = sd(pod$view.points, na.rm=TRUE)
cat("  Standardna devijacija kategorije \"view.points\"",
sd_view_points, "\n")
print("Kategorije oko kojih se korisnici najvise slazu:",
quote=F)
sd_churches = sd(pod$churches, na.rm=TRUE)
sd_cafes = sd(pod$cafes, na.rm=TRUE)
cat("  Standardna devijacija kategorije \"churches\"",
sd_churches, "\n")
cat("  Standardna devijacija kategorije \"cefes\"",
sd_cafes, "\n")
# Radimo f-testove kako bi provjerili jeli stvarno postoji
# signifikantna razlika između kategorija
var.test(pod$churches, pod$art.galleries)
var.test(pod$view.points, pod$cafes)
# Radimo f-testove kako bi provjerili postoji li signifikantna
# razlika kod dvije najvise i najmanje polarizirajuce
# kategorije
var.test(pod$churches, pod$cafes)
var.test(pod$view.points, pod$art.galleries)
# f-testovi za neke kategorije slicne varijance
var.test(pod$parks, pod$theatres)
var.test(pod$pubs.bars, pod$monuments)
var.test(pod$juice.bars, pod$view.points)
#var.test(pod$museums, pod$theatres)
#Koristimo bootsrap testove iz razloga što su podatci
# neparametarski
library(bootstrap)
print("Parks & Theatres")
parksTheatres = bootstrapvariantpairedinterval(pod$parks,
pod$theatres, 0.05, 1000)
parksTheatres$lb
parksTheatres$ub
print("Pubs.bars & Monuments")
pubsMonuments = bootstrapvariantpairedinterval(pod$pubs.bars,
pod$monuments , 0.05, 1000)
pubsMonuments$lb
pubsMonuments$ub
print("Juice.bars & View.Points")
juiceView = bootstrapvariantpairedinterval(pod$juice.bars,
pod$view.points, 0.05, 1000)
juiceView$lb
juiceView$ub
print("Museums & Theatres")
museumsTheatres = bootstrapvariantpairedinterval(pod$museums,
pod$theatres, 0.05, 1000)
museumsTheatres$lb
museumsTheatres$ub
# Prikazat cemo neke kategorije pomocu histograma
#   Prvo pokazujemo kategorije velikih razlika
par(mfrow=c(2,2), mar=c(2.5,2.5,5,0), oma = c(0, 0, 2, 0))
hist(pod$art.galleries,col="indianred2",
breaks = seq(from = min(pod$art.galleries ,na.rm = TRUE) - 0.5,
to = max(pod$art.galleries, na.rm=TRUE) + 0.5,  length = 11))
hist(pod$churches,col="lightblue",
breaks = seq(from = min(pod$churches ,na.rm = TRUE) - 0.5,
to = max(pod$churches, na.rm=TRUE) + 0.5, length = 11))
hist(pod$view.points,col="indianred2",
breaks = seq(from = min(pod$view.points ,na.rm = TRUE) - 0.5,
to = max(pod$view.points, na.rm=TRUE) + 0.5, length = 11))
hist(pod$cafes,col="lightblue",
breaks = seq(from = min(pod$cafes ,na.rm = TRUE) - 0.5,
to = max(pod$cafes, na.rm=TRUE) + 0.5, length = 11))
mtext("Najvise i najmanje polariziajuce kategorije",
outer = TRUE,cex=1.5,font=2)
#   Zatim pokazujemo kategorije slicnih varijanci
par(mfrow=c(2,2), mar=c(2.5,2.5,5,0), oma = c(0, 0, 2, 0))
hist(pod$juice.bars, col="lightpink3",
breaks = seq(from = min(pod$juice.bars ,na.rm = TRUE) - 0.5,
to = max(pod$juice.bars, na.rm=TRUE) + 0.5, length = 11))
hist(pod$view.points,  col="lightpink3",
breaks = seq(from = min(pod$view.points ,na.rm = TRUE) - 0.5,
to = max(pod$view.points, na.rm=TRUE) + 0.5, length = 11))
hist(pod$pubs.bars,  col="lightpink",
breaks = seq(from = min(pod$pubs.bars ,na.rm = TRUE) - 0.5,
to = max(pod$pubs.bars, na.rm=TRUE) + 0.5, length = 11))
hist(pod$monuments,  col="lightpink",
breaks = seq(from = min(pod$monuments ,na.rm = TRUE) - 0.5,
to = max(pod$monuments, na.rm=TRUE) + 0.5, length = 11))
mtext("Kategorije slicnih varijanci",outer = TRUE,cex=1.5,font=2)
####### GRUPE ##########3
#varKult = var(pod.new$kultura, na.rm = TRUE)
#varHrana = var(pod.new$hrana, na.rm = TRUE)
#varPice = var(pod.new$pice, na.rm = TRUE)
#varZabava = var(pod.new$zabava, na.rm = TRUE)
#varSport = var(pod.new$sport, na.rm = TRUE)
#varPriroda = var(pod.new$priroda, na.rm = TRUE)
#varUgost = var(pod.new$ugostiteljski, na.rm = TRUE)
#varRelig = var(pod.new$religiozni, na.rm = TRUE)
#cat("Varijanca grupe kultura: " , varKult, "\n")
#cat("Varijanca grupe hrana: " , varHrana, "\n")
#cat("Varijanca grupe pice: " , varPice, "\n")
#cat("Varijanca grupe zabava: " , varZabava, "\n")
#cat("Varijanca grupe sport: " , varSport, "\n")
#cat("Varijanca grupe priroda: " , varPriroda, "\n")
#cat("Varijanca grupe ugostiteljski: " , varUgost, "\n")
#cat("Varijanca grupe religiozni: " , varRelig, "\n")
variance_group_data = sapply(pod.new,var,na.rm = T)
sd_group_data = sqrt(variance_group_data)
sd_group_data = sort(sd_group_data)
par(mfrow=c(1,1),mar = c(6, 4, 0, 0))
barplot(sd_group_data, ylab="Standardna devijacija",
ylim=c(0,0.5 + max(sd_group_data)) , col="lightgreen", las=2)
#   Testiramo koje su grupe najvise polarizirajuce a koje najmanje
var.test(pod.new$zabava, pod.new$kultura)
var.test(pod.new$sport, pod.new$ugostiteljski)
par(mfrow=c(2,2),mar=c(2.5,2.5,5,0), oma = c(0, 0, 2, 0))
hist(pod.new$zabava,  col="burlywood1",
breaks = seq(from = min(pod.new$zabava ,na.rm = TRUE) - 0.5,
to = max(pod.new$zabava, na.rm=TRUE) + 0.5, length = 11))
hist(pod.new$sport,col="darkseagreen2",
breaks = seq(from = min(pod.new$sport ,na.rm = TRUE) - 0.5,
to = max(pod.new$sport, na.rm=TRUE) + 0.5, length = 11))
hist(pod.new$kultura, col="burlywood1",
breaks = seq(from = min(pod.new$kultura ,na.rm = TRUE) - 0.5,
to = max(pod.new$kultura, na.rm=TRUE) + 0.5, length = 11))
hist(pod.new$ugostiteljski, col="darkseagreen2",
breaks = seq(from = min(pod.new$ugostiteljski ,na.rm = TRUE) - 0.5,
to = max(pod.new$ugostiteljski, na.rm=TRUE) + 0.5, length = 11))
# Provjera var testom za grupe slicnih varijanci
var.test(pod.new$religiozni, pod.new$pice)
var.test(pod.new$priroda, pod.new$sport)
#Računanje korelacijske matrice. Funkcija cor() računa
#korelacijski koefcijent, a funkcija rcorr() osim korelacijskog
#koeficijenta vraća i p-vrijednost korelacije. Na prvi graf idu
#rezultati iz prve korelacijske matrice, a na drugi idu rezultati druge,
#s tim da se u drugom grafu ne prikazuju vrijednosti čija je
#p-vrijednost ispod 0.01.
#Corrplot je jako zgodan za prikaz korelacija, može se dosta toga
#modificirati u ispisu. Ostavio sam obje metode s nekim različitim
#parametrima da pogledate. Order hclust je po meni najprikladniji
#jer se time postiže hijerarhijski prikaz vrijednosti, probajte
#umjesto hclust staviti alphabet, dosta je ružnije.
require(ggpubr)
require(tidyverse)
require(Hmisc)
require(corrplot)
res_cor <- cor(pod,use="complete.obs",method="spearman")
res_rcorr <- rcorr(as.matrix(pod),type = c("spearman"))
round(res_cor,2)
######    SVUGDJE U CORRPLOT MOZE SE DODATI method=""
#a moguce vrijednosti su  “circle”, “square”, “ellipse”,
#“number”, “shade”, “color”, “pie”  #######
corrplot(res_cor, type = "upper",method="circle", order = "hclust",
tl.col = "black")
corrplot(res_rcorr$r, type="lower",method= "circle", order="hclust",
tl.col = "black",
p.mat = res_rcorr$P, sig.level = 0.01, insig = "blank")
#metodom cor.test() možemo ispitati korelaciju između para
#uzoraka ako nam zatreba
#korelacije za markov dio
res_cor <- cor(pod.new,use="complete.obs",method="spearman")
res_rcorr <- rcorr(as.matrix(pod.new), type = c("spearman"))
round(res_cor,2)
corrplot(res_cor, type = "upper" ,method="circle", order = "hclust",
tl.col = "black")
corrplot(res_rcorr$r, type = "upper",method="circle", order="hclust",
tl.col = "black", p.mat = res_rcorr$P, sig.level = 0.01, insig = "blank")
#Linearna regresija --početak
#Stvorene su nove tablice gdje je uklonjen samo stupac "users".
pod.cor = pod
pod.new.cor = pod.new
#Prvo je fokus na običnim podacima, tj. podacima koji nisu grupirani.
#Iz korelacijskog dijagrama vidi se kako je kategorija restaurants korelirana s možda
#najviđe drugih kategorija.
fit.restaurants = lm(restaurants ~ ., data = pod.cor)
summary(fit.restaurants)
#Vidi se da je vrijednost Adjusted R-squared u redu, ali vidimo kako neke kategorije
#nisu signifikantne za linearnu regresiju,
#tj. kada bi faktor uz njih bio 0, linearna regresija se nebi signifikantno
#razlikovala od trenutne.
fit.restaurants.edit = lm(restaurants ~ . -parks -local.services -swimming.pools -cafes,
data = pod.cor)
summary(fit.restaurants.edit)
#Tu vidimo kako uklanjanjem nesignifikatnih atributa iz jednadžbe linearne regresije u
#ovom slučaju ne dobivamo znatno različitu vrijednost Adjusted R-squared
qqnorm(rstandard(fit.restaurants.edit),  main = "restaurants ~ . -parks -local.services
-swimming.pools -cafes")
qqline(rstandard(fit.restaurants.edit), col = "red")
#Danas su teretane jako popularne, pa stoga pokušajmo viditi može li se iz ostalih
#kategorija predvidjeti ocjena teretane za usera
fit.gyms = lm(gyms ~ ., data = pod.cor)
summary(fit.gyms)
#Adjusted R-squared je u redu vrijednost, no opet vidimo puno nesignifikantnih kategorija,
#možemo li poboljšati adjusted R-squared vrijednost micanjem tih kategorija.
#Napravimo linearnu regresiju za gyms koristeći sve signifikatne kategorije.
fit.gyms.edit = lm(gyms~beaches+parks+theatres+restaurants+pubs.bars+hotels.other.lodgings+
art.galleries+dance.clubs+swimming.pools+bakeries+
cafes+view.points+gardens, data=pod.cor)
summary(fit.gyms.edit)
#Ovaj put smo ipak dobili različitu vrijednost za adjusted r-squared i to veću.
#Pogledajmo reziduale
par(mfrow=c(1,1),mar = c(0, 2, 5,0))
qqnorm(rstandard(fit.gyms.edit), main ="gyms~beaches+parks+theatres+restaurants+pubs.bars+
hotels.other.lodgings+art.galleries+dance.clubs+swimming.pools+
bakeries+cafes+view.points+gardens")
qqline(rstandard(fit.gyms.edit), col = "red")
#Pekare i kafići bi u stvarnome svijjetu mogli biti viđeni kao negativno korelirani s
#teretanama
#Možemo li iz ocjena pekara i kafića predvidjeti ocjenu teretane?
fit.gym.spec1 = lm(gyms~bakeries+cafes, data = pod.cor)
summary(fit.gym.spec1)
#Vrijednost adjusted r-squared je ponovno uredna, no možemo li poboljjšati našu regresiju?
#Što ako dodamo swimming.pools?
fit.gym.spec2 = lm(gyms~bakeries+cafes+swimming.pools, data = pod.cor)
summary(fit.gym.spec2)
#Adjusted r-squared vrijednost je poskočila, izgleda da su teretane i bazeni dobro
#korelirani.
#To također možemo vidjeti iz vrijednosti faktora uz swimming.pools.
#Kako radimo regresiju jedne kategorije sa samo još jednom drugom ovo je sjajna prilika
#za crtanje točaka.
plot(x = pod.cor$swimming.pools, y = pod.cor$gyms,
main = "gyms ~ swimming.pools", xlab = "swimming.pools", ylab = "gyms" )
fit.gym.swim = lm(gyms~swimming.pools, data = pod.cor)
summary(fit.gym.swim)
#Multiple R-squared vrijednost je opala, no ne previše, što je bilo za očekivati.
#Ipak i dalje je u redu.
#Iscrtajmo i dobivenu liniju regersiju
abline(fit.gym.swim, col="red")
#Utjecaj religiju u kulturi je vidljiv kroz cijelu povijest, no očituje li se i u
#našim podacima.
#Pogledajmo možemo li ocjenu crkava predvidjeti ocjenama kulturnih kategorija.
fit.religija.kultura = lm(churches ~ museums + monuments + art.galleries + theatres,
data = pod.cor)
summary(fit.religija.kultura)
#Vidimo da kazališta možemo izbaciti iz regresije
fit.religija.kultura.edit = lm(churches ~ museums + monuments + art.galleries,
data = pod.cor)
summary(fit.religija.kultura.edit)
#Izbacivanjem kazališta nismo postigli ništa, no adjusted R-squared vrijednost
#je i dalje uredna.
#Možemo li dobiti drukčije rezutate ako koristimo grupe religiozni i kultura iz
#grupirane tablice?
fit.religija.kultura.grupe = lm(religiozni ~ kultura, data = pod.new.cor)
summary(fit.religija.kultura.grupe)
#Izgleda da ova regresija nije dobra što je očito iz jako male vrijednosti
#multiple R-squared vrijednosti
#Pogledajmo kako izgledaju podaci na grafu
plot(x = pod.new.cor$kultura,y =  pod.new.cor$religiozni,
main = "religiozni ~ kultura",
xlab = "kultura", ylab = "raligiozni")
abline(fit.religija.kultura.grupe, col = "red")
#Kao što smo i mogli pročitati iz summary funkcije ove linearne regresije,
#p-vrijednost F-statistike
#nam ukazuje da linija regresije koju povlačimo nije značajno bolja u predikciji
#od linije y = sredina y vrijednosti na grafu, tj. y-intercepta
#Nastavimo istraživati tablicu grupiranihh podataka.
#Hrana se čini kao grupa s najboljim korelacijama s ostalim grupama.
fit.hrana = lm(hrana ~ ., data = pod.new.cor)
summary(fit.hrana)
#Adjusted R-squared vrijednost je u redu, te niti jedna grupa nije nesignifikatna
#u ovoj linearnoj regresiji
#Razmislimo na trenutak o stvarnome svijetu, mogli bismo reći da ima smisla
#pretpostavka da
#korisnici koji vole boravak u prirodi nisu baš nasretniji kada vrijeme provode u
#zatvorenim prostorima
#npr. u kafićima, trgovačkim centrima te restoranima i slično
#Ispitajmo tu pretpostaku, pogledajmo možemo li iz ocjena grupa zabava, hrana i
#pice predvidjeti ocjenu grupe priroda.
fit.priroda.pretp = lm(priroda ~ zabava + hrana + pice, data = pod.new.cor)
summary(fit.priroda.pretp)
#Dobili smo urednu vrijednost za adjusted R-squared, pogledajmo koliko bolje možemo
#predvidjeti prirodu ako uključimo
#ostale grupe u regresiju
fit.priroda.sve = lm(priroda ~ ., data = pod.new.cor)
summary(fit.priroda.sve)
#Izbacimo nesignifikantne grupe sport i ugostiteljski
fit.priroda.sve = lm(priroda ~ . -sport -ugostiteljski, data = pod.new.cor)
summary(fit.priroda.sve)
#Regresija nam je dobra, pogledajmo reziduale, očekivano je da će biti bolji nego
#u regresijama
#s kategorijama običnihh podataka, ipak su ove grupe normalnije distribuirane
qqnorm(rstandard(fit.priroda.sve), main="priroda ~ . -sport -ugostiteljski")
qqline(rstandard(fit.priroda.sve), col = "red")
#Linearna regresija za grupu zabava prema svim grupama daje dobre reziduale,
#pogledajmo.
fit.zabava = lm(zabava ~ ., data = pod.new.cor)
summary(fit.zabava)
qqnorm(rstandard(fit.zabava), main="zabava ~ .")
qqline(rstandard(fit.zabava), col = "red")
#Korelacija grupa hrana i priroda dobro izgleda na grafu korelacija, isprobajmo
fit.hrana.priroda = lm(hrana ~ priroda, data = pod.new.cor)
summary(fit.hrana.priroda)
plot(x = pod.new.cor$priroda, y = pod.new.cor$hrana, main = "hrana ~ priroda",
xlab = "priroda", ylab = "hrana")
abline(fit.hrana.priroda, col = "red")
#Vidi se da je riječ o negativnoj korelaciji, regresija se čini uredna.
#Dodajmo sada grupu piće i ostalo u regersiju i pogledajmo koliko
#blizu možemo doći vrijednosti adjusted R-squared regresije hrane sa svim
#atributima
fit.hrana.edit = lm(hrana ~ priroda + pice + ostalo, data = pod.new.cor)
summary(fit.hrana.edit)
fit.hrana.sve = lm(hrana ~ ., data = pod.new.cor)
summary(fit.hrana.sve)
#Vidimo da razlika u adjusted R-squared vrijednostima nije velika, dakle umjesto
#regresije sa svim grupama,
#za grupu hrana možemo koristiti regresiju samo s tri grupe; priroda, pice i ostalo.
#Linearna regresija --kraj
